#coding=utf-8
'''
高度可约的三角形数
三角形数数列是通过逐个加上自然数来生成的。例如，第7个三角形数是 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28。三角形数数列的前十项分别是：

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, …
让我们列举出前七个三角形数的所有约数：

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
我们可以看出，28是第一个拥有超过5个约数的三角形数。

第一个拥有超过500个约数的三角形数是多少？
'''
import math
import time

def divisors(n):
    count = 0
    for x in xrange(1,int(math.sqrt(n))+1):
        if n % x == 0:
            count += 2  #n(n+1)/2 不可能是完全平方数
    return count

n=1

while divisors(n*(n+1)/2) <= 500:
    n += 1
    
print n,n*(n+1)/2

